from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from config import ADMIN_IDS

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–¥–º–∏–Ω –ª–∏ —ç—Ç–æ
def is_admin(user_id):
    return user_id in ADMIN_IDS

# Inline-–º–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∞
def admin_menu_markup():
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton("üì• –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞—è–≤–∫–∏", callback_data="admin_view_apps"),
        types.InlineKeyboardButton("üéØ –ü—Ä–æ—Å—Ç–∞–≤–∏—Ç—å –±–∞–ª–ª—ã", callback_data="admin_set_scores"),
        types.InlineKeyboardButton("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å", callback_data="admin_send_news"),
        types.InlineKeyboardButton("üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–π—Ç–∏–Ω–≥", callback_data="admin_view_rating"),
        types.InlineKeyboardButton("üîç –ü–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞", callback_data="admin_search_user"),
        types.InlineKeyboardButton("üßæ –û—Ç—á—ë—Ç –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫—É", callback_data="admin_user_report"),
        types.InlineKeyboardButton("üì£ –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", callback_data="admin_broadcast"),
    )
    return markup

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin
async def admin_start(message: types.Message, state: FSMContext):
    if is_admin(message.from_user.id):
        await state.finish()
        await message.answer("üõ° –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=admin_menu_markup())
    else:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É.")

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def register_admin_handlers(dp: Dispatcher):
    dp.register_message_handler(admin_start, commands=["admin"], state="*")
