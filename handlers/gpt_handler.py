# handlers/gpt_handler.py

from openai import OpenAI
from config import OPENAI_API_KEY, ADMIN_IDS
from services.common import admin_menu_markup
import logging

client = OpenAI(api_key=OPENAI_API_KEY)

rules_summary = """
–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É ¬´–≠—Å—Ç–∞—Ñ–µ—Ç–∞ –ü–æ–±–µ–¥—ã. –û—Ç –ø–∞–º—è—Ç–Ω–∏–∫–∞ –∫ –ø–∞–º—è—Ç–∏¬ª. –ö–æ–Ω–∫—É—Ä—Å –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –≤ –≥–æ—Ä–æ–¥–µ –°–Ω–µ–∂–∏–Ω—Å–∫–µ —Å 1 –∞–ø—Ä–µ–ª—è –ø–æ 30 –Ω–æ—è–±—Ä—è 2025 –≥–æ–¥–∞. –£—á–∞—Å—Ç–≤—É—é—Ç —Ç–æ–ª—å–∫–æ –∂–∏—Ç–µ–ª–∏ –≥–æ—Ä–æ–¥–∞ –°–Ω–µ–∂–∏–Ω—Å–∫–∞.

–£—á–∞—Å—Ç–Ω–∏–∫–∏ –ø—É–±–ª–∏–∫—É—é—Ç —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ —É –ø–∞–º—è—Ç–Ω–∏–∫–æ–≤ –∏–ª–∏ –∑–Ω–∞–∫–æ–≤—ã—Ö –º–µ—Å—Ç, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∑–∞—â–∏—Ç–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–∞, –∏ –ø–æ–¥–∞—é—Ç –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç. –í –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞—é—Ç —Ö–µ—à—Ç–µ–≥ #–û—Ç–ü–∞–º—è—Ç–Ω–∏–∫–∞–ö–ü–∞–º—è—Ç–∏, –¥–∞—Ç—É –∏ –º–µ—Å—Ç–æ.

üìå –í–æ—Ç –∫–∞–∫ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –±–∞–ª–ª—ã:
- –ü–∞–º—è—Ç–Ω–∏–∫, –ø–æ—Å–≤—è—â—ë–Ω–Ω—ã–π –≤–æ–µ–Ω–Ω—ã–º —Å–æ–±—ã—Ç–∏—è–º –≤ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏ ‚Äî 3 –±–∞–ª–ª–∞
- –ü–∞–º—è—Ç–Ω–∏–∫, –ø–æ—Å–≤—è—â—ë–Ω–Ω—ã–π —Ç—Ä—É–¥–æ–≤–æ–º—É –ø–æ–¥–≤–∏–≥—É –≤ –≥–æ–¥—ã –≤–æ–π–Ω—ã ‚Äî 3 –±–∞–ª–ª–∞
- –ò–º–µ–Ω–Ω—ã–µ –ø–∞–º—è—Ç–Ω–∏–∫–∏ –ì–µ—Ä–æ—è–º –°–æ–≤–µ—Ç—Å–∫–æ–≥–æ –°–æ—é–∑–∞ ‚Äî 4 –±–∞–ª–ª–∞
- –ü–∞–º—è—Ç–Ω–∏–∫–∏ –≥–æ—Ä–æ–¥–∞–º –í–æ–∏–Ω—Å–∫–æ–π –∏–ª–∏ –¢—Ä—É–¥–æ–≤–æ–π –°–ª–∞–≤—ã ‚Äî 4 –±–∞–ª–ª–∞
- –ú—É–∑–µ–π–Ω—ã–µ —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏ –Ω–∞ —Ç–µ–º—É –≤–æ–π–Ω—ã –∏–ª–∏ —Ç—Ä—É–¥–∞ ‚Äî 4 –±–∞–ª–ª–∞
- –ü–∞–º—è—Ç–Ω—ã–µ –¥–æ—Å–∫–∏, –ø–æ—Å–≤—è—â—ë–Ω–Ω—ã–µ –∑–∞—â–∏—Ç–Ω–∏–∫–∞–º, —Ç—Ä—É–¥—É –∏–ª–∏ –≤–æ–µ–Ω–Ω—ã–º —Å–æ–±—ã—Ç–∏—è–º ‚Äî 1 –±–∞–ª–ª

üîç –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–∞–º—è—Ç–Ω–∏–∫:
- –°—Ä–∞–≤–Ω–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏ –≤—ã—à–µ
- –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –æ—Ç—Ä–∞–∂–∞–µ—Ç –∏–¥–µ–∏ –≥–µ—Ä–æ–∏–∑–º–∞, –ø–∞–º—è—Ç–∏, —Ç—Ä—É–¥–∞, –∑–∞—â–∏—Ç—ã –†–æ–¥–∏–Ω—ã ‚Äî —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –ø–æ–¥—Ö–æ–¥–∏—Ç
- –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—à—å—Å—è, –¥–∞–π –≤–µ–∂–ª–∏–≤—ã–π –æ—Ç–≤–µ—Ç –∏ –Ω–∞–ø—Ä–∞–≤—å –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É

üéì –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å —Ç–æ—á–Ω–æ –æ—Ü–µ–Ω–∏—Ç—å –ø–∞–º—è—Ç–Ω–∏–∫:
- –ù–∞–ø–∏—à–∏: ‚Äú–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –†–µ–∫–æ–º–µ–Ω–¥—É—é —É—Ç–æ—á–Ω–∏—Ç—å —É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ –∫–æ–Ω–∫—É—Ä—Å–∞: @sibi_sibi‚Äù

–û—Ç–≤–µ—á–∞–π –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ, –∫—Ä–∞—Ç–∫–æ, –ø–æ –¥–µ–ª—É. –ü–æ–º–æ–≥–∞–π —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –ø—Ä–∞–≤–∏–ª–∞—Ö.
"""

async def ask_gpt(user_id: int, text: str, bot):
    # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
    if len(text.strip()) < 5 or len(text) > 300:
        await bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –≤–æ–ø—Ä–æ—Å ‚Äî –æ–Ω —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –¥–ª–∏–Ω–Ω—ã–π.")
        return

    if all(char == text[0] for char in text.strip()):  # –ü—Ä–∏–º–µ—Ä: "–∞–∞–∞–∞–∞–∞–∞"
        await bot.send_message(user_id, "–í–æ–ø—Ä–æ—Å –≤—ã–≥–ª—è–¥–∏—Ç –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏–Ω–∞—á–µ.")
        return

    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": rules_summary},
                {"role": "user", "content": text}
            ],
            max_tokens=400
        )
        answer = response.choices[0].message.content
        await bot.send_message(user_id, answer)
        if user_id in ADMIN_IDS:
            await bot.send_message(user_id, "üõ° –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=admin_menu_markup())
    except Exception as e:
        logging.error(f"[GPT ERROR] {e}")
        await bot.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def register_gpt_handler(dp):
    pass  # GPT –±–æ–ª—å—à–µ –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω–æ, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é

