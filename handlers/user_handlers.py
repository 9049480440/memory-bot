# user_handlers.py

from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
import logging
from services.sheets import add_or_update_user, get_user_scores, save_user_state, get_user_state, clear_user_state
from handlers.application_handlers import start_application, ApplicationState, cancel_markup
from services.common import main_menu_markup, is_admin, admin_menu_markup

logger = logging.getLogger(__name__)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(message: types.Message, state: FSMContext):
    await state.finish()
    user_id = message.from_user.id

    try:
        add_or_update_user(message.from_user)

        msg = await message.answer(
            "üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä—Å ¬´–≠—Å—Ç–∞—Ñ–µ—Ç–∞ –ü–æ–±–µ–¥—ã. –û—Ç –ø–∞–º—è—Ç–Ω–∏–∫–∞ –∫ –ø–∞–º—è—Ç–∏¬ª!* üá∑üá∫\n\n"
            "–ö–æ–Ω–∫—É—Ä—Å –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å 1 –∞–ø—Ä–µ–ª—è –ø–æ 30 –Ω–æ—è–±—Ä—è 2025 –≥–æ–¥–∞ –∏ –ø–æ—Å–≤—è—â—ë–Ω 80-–ª–µ—Ç–∏—é –ü–æ–±–µ–¥—ã –∏ –ì–æ–¥—É –ó–∞—â–∏—Ç–Ω–∏–∫–∞ –û—Ç–µ—á–µ—Å—Ç–≤–∞.\n\n"
            "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É, —É–∑–Ω–∞—Ç—å —Å–≤–æ–∏ –±–∞–ª–ª—ã –∏ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ —É—á–∞—Å—Ç–∏—è.\n"
            "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å üëá",
            reply_markup=main_menu_markup(user_id),
            parse_mode="Markdown"
        )
        save_user_state(user_id, "main_menu", None, msg.message_id)
        logger.info(f"User {user_id} started the bot")
    except Exception as e:
        logger.error(f"Error in start handler: {e}")
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —Å –ø–æ–º–æ—â—å—é /start."
        )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
async def handle_main_menu(callback: types.CallbackQuery, state: FSMContext):
    await state.finish()
    user_id = callback.from_user.id
    current_state, state_data, last_message_id = get_user_state(user_id)

    if current_state.startswith("application_step"):
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("üìù –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="continue_app"))
        markup.add(types.InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É", callback_data="apply"))
        markup.add(types.InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu"))

        try:
            await callback.message.edit_text(
                "–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–∞—è –∑–∞—è–≤–∫–∞. –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –µ—ë –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é?",
                reply_markup=markup
            )
        except Exception as e:
            logger.error(f"Error editing message: {e}")
            await callback.message.answer(
                "–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–∞—è –∑–∞—è–≤–∫–∞. –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –µ—ë –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é?",
                reply_markup=markup
            )
        return

    if callback.data == "info":
        text = (
            "üìç *–ö–æ–Ω–∫—É—Ä—Å ¬´–≠—Å—Ç–∞—Ñ–µ—Ç–∞ –ü–æ–±–µ–¥—ã. –û—Ç –ø–∞–º—è—Ç–Ω–∏–∫–∞ –∫ –ø–∞–º—è—Ç–∏¬ª*\n"
            "–ü–æ—Å–≤—è—â—ë–Ω 80-–ª–µ—Ç–∏—é –ü–æ–±–µ–¥—ã –∏ –ì–æ–¥—É –ó–∞—â–∏—Ç–Ω–∏–∫–∞ –û—Ç–µ—á–µ—Å—Ç–≤–∞.\n\n"
            "üéØ *–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?*\n"
            "–°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ—Å—å —É –ø–∞–º—è—Ç–Ω–∏–∫–∞, –º–µ–º–æ—Ä–∏–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—á–∫–∏ –∏–ª–∏ –º—É–∑–µ–π–Ω–æ–π —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏, —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å –∑–∞—â–∏—Ç–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–∞.\n"
            "–û–ø—É–±–ª–∏–∫—É–π—Ç–µ –ø–æ—Å—Ç —Å —Ö–µ—à—Ç–µ–≥–æ–º `#–û—Ç–ü–∞–º—è—Ç–Ω–∏–∫–∞–ö–ü–∞–º—è—Ç–∏` –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –¥–æ—Å—Ç—É–ø–µ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö.\n"
            "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ ‚Äî –ø–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ –±–æ—Ç!\n\n"
            "üìä *–°–∫–æ–ª—å–∫–æ –±–∞–ª–ª–æ–≤?*\n"
            "–ó–∞ –æ–¥–∏–Ω –ø–æ—Å—Ç –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –¥–æ *8 –±–∞–ª–ª–æ–≤* (–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–±—ä–µ–∫—Ç–∞).\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä, –ø–∞–º—è—Ç–Ω—ã–µ –¥–æ—Å–∫–∏ ‚Äî 4 –±–∞–ª–ª–∞, –º—É–∑–µ–∏ –∏ –º–µ–º–æ—Ä–∏–∞–ª—ã ‚Äî 8 –±–∞–ª–ª–æ–≤.\n\n"
            "üèÜ *–ù–∞–±–µ—Ä–∏—Ç–µ 80 –±–∞–ª–ª–æ–≤ ‚Äî –∏ —É—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –ø—Ä–∏–∑–æ–≤!*\n"
            "–ì–ª–∞–≤–Ω—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à —Å–æ—Å—Ç–æ–∏—Ç—Å—è *9 –¥–µ–∫–∞–±—Ä—è 2025 –≥–æ–¥–∞ ‚Äî –≤ –î–µ–Ω—å –ì–µ—Ä–æ–µ–≤ –û—Ç–µ—á–µ—Å—Ç–≤–∞*.\n"
            "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–∑—ã ‚Äî –∑–∞ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!\n\n"
            "üìé *–ü—Ä–∞–≤–∏–ª–∞ –∫–æ–Ω–∫—É—Ä—Å–∞:* [–°–º–æ—Ç—Ä–µ—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç](https://disk.yandex.ru/i/PZfquUnQau8XGA)\n\n"
            "‚ùì *–ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ‚Äî —Å–º–µ–ª–æ –∑–∞–¥–∞–≤–∞–π—Ç–µ! –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å üôÇ*"
        )
        try:
            await callback.message.edit_text(
                text,
                reply_markup=main_menu_markup(user_id),
                parse_mode='Markdown'
            )
            save_user_state(user_id, "main_menu", None, callback.message.message_id)
        except Exception as e:
            logger.error(f"Error updating message: {e}")
            await callback.message.answer(
                text,
                reply_markup=main_menu_markup(user_id),
                parse_mode='Markdown'
            )
            await callback.message.delete()

    elif callback.data == "apply":
        text = (
            "üöÄ *–ù–∞—á–∏–Ω–∞–µ–º –ø–æ–¥–∞—á—É –∑–∞—è–≤–∫–∏!*\n\n"
            "–°–µ–π—á–∞—Å —è –∑–∞–¥–∞–º –≤–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–∏—Ö –ø–æ –æ—á–µ—Ä–µ–¥–∏.\n\n"
            "–í–æ—Ç —á—Ç–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è:\n"
            "1Ô∏è‚É£ –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à—É –ø—É–±–ª–∏–∫–∞—Ü–∏—é —Å —Ö–µ—à—Ç–µ–≥–æ–º `#–û—Ç–ü–∞–º—è—Ç–Ω–∏–∫–∞–ö–ü–∞–º—è—Ç–∏`\n"
            "2Ô∏è‚É£ –î–∞—Ç–∞ —Å—ä—ë–º–∫–∏\n"
            "3Ô∏è‚É£ –ù–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç, –≥–¥–µ —Å–¥–µ–ª–∞–Ω–æ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ\n"
            "4Ô∏è‚É£ –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: *–ø–∞–º—è—Ç–Ω–∏–∫ –≥–µ—Ä–æ—è–º –í–û–í –≤ –ø–∞—Ä–∫–µ –ü–æ–±–µ–¥—ã*)\n\n"
            "–ï—Å–ª–∏ –≤—Å—ë –≥–æ—Ç–æ–≤–æ ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º! ‚ú®"
        )
        try:
            await callback.message.edit_text(text, parse_mode="Markdown")
        except Exception as e:
            logger.error(f"Error editing message: {e}")
            await callback.message.answer(text, parse_mode="Markdown")
            await callback.message.delete()
            
        await start_application(callback.message)

    elif callback.data == "continue_app":
        if current_state == "application_step_1":
            text = (
                "üìé –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π —É –ø–∞–º—è—Ç–Ω–∏–∫–∞.\n\n"
                "‚ö†Ô∏è *–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:*\n"
                "- –û–¥–Ω–∞ –∑–∞—è–≤–∫–∞ = –æ–¥–Ω–∞ —Å—Å—ã–ª–∫–∞ = –æ–¥–∏–Ω –ø–æ—Å—Ç.\n"
                "- –ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Å—Ç–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–∞–º—è—Ç–Ω–∏–∫–∞–º–∏, –Ω—É–∂–Ω–æ –ø–æ–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é –∑–∞—è–≤–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ.\n"
                "- –ù–µ –ø—Ä–∏—Å—ã–ª–∞–π—Ç–µ —Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä–∞—è —É–∂–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª–∞ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ —Ä–∞–Ω–µ–µ.\n\n"
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!"
            )
            try:
                await callback.message.edit_text(
                    text,
                    reply_markup=cancel_markup(),
                    parse_mode="Markdown"
                )
            except Exception as e:
                logger.error(f"Error editing message: {e}")
                await callback.message.answer(
                    text,
                    reply_markup=cancel_markup(),
                    parse_mode="Markdown"
                )
                await callback.message.delete()
                
            await ApplicationState.waiting_for_link.set()

        elif current_state == "application_step_2":
            try:
                await callback.message.edit_text(
                    "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Å—ä—ë–º–∫–∏ (–î–î.–ú–ú.–ì–ì–ì–ì):",
                    reply_markup=cancel_markup()
                )
            except Exception as e:
                logger.error(f"Error editing message: {e}")
                await callback.message.answer(
                    "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Å—ä—ë–º–∫–∏ (–î–î.–ú–ú.–ì–ì–ì–ì):",
                    reply_markup=cancel_markup()
                )
                await callback.message.delete()
                
            await ApplicationState.waiting_for_date.set()
            
        elif current_state == "application_step_3":
            try:
                await callback.message.edit_text(
                    "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ, –≥–¥–µ –±—ã–ª–∞ —Å–¥–µ–ª–∞–Ω–∞ —Å—ä—ë–º–∫–∞ ‚Äî –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: *–°–Ω–µ–∂–∏–Ω—Å–∫*.",
                    reply_markup=cancel_markup(),
                    parse_mode="Markdown"
                )
            except Exception as e:
                logger.error(f"Error editing message: {e}")
                await callback.message.answer(
                    "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ, –≥–¥–µ –±—ã–ª–∞ —Å–¥–µ–ª–∞–Ω–∞ —Å—ä—ë–º–∫–∞ ‚Äî –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: *–°–Ω–µ–∂–∏–Ω—Å–∫*.",
                    reply_markup=cancel_markup(),
                    parse_mode="Markdown"
                )
                await callback.message.delete()
                
            await ApplicationState.waiting_for_location.set()
            
        elif current_state == "application_step_4":
            try:
                await callback.message.edit_text(
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä: *–º–µ–º–æ—Ä–∏–∞–ª –°–ª–∞–≤—ã*, *–ø–∞–º—è—Ç–Ω–∏–∫ –≥–µ—Ä–æ—è–º –í–û–í*, *–¥–æ—Å–∫–∞ –Ω–∞ –∑–¥–∞–Ω–∏–∏ —à–∫–æ–ª—ã ‚Ññ125*.\n\n"
                    "–ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –Ω–µ –∏–º–µ–µ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è, –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ –µ–≥–æ –∫–æ—Ä–æ—Ç–∫–æ.",
                    reply_markup=cancel_markup(),
                    parse_mode="Markdown"
                )
            except Exception as e:
                logger.error(f"Error editing message: {e}")
                await callback.message.answer(
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä: *–º–µ–º–æ—Ä–∏–∞–ª –°–ª–∞–≤—ã*, *–ø–∞–º—è—Ç–Ω–∏–∫ –≥–µ—Ä–æ—è–º –í–û–í*, *–¥–æ—Å–∫–∞ –Ω–∞ –∑–¥–∞–Ω–∏–∏ —à–∫–æ–ª—ã ‚Ññ125*.\n\n"
                    "–ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –Ω–µ –∏–º–µ–µ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è, –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ –µ–≥–æ –∫–æ—Ä–æ—Ç–∫–æ.",
                    reply_markup=cancel_markup(),
                    parse_mode="Markdown"
                )
                await callback.message.delete()
                
            await ApplicationState.waiting_for_name.set()

    elif callback.data == "back_to_menu":
        clear_user_state(user_id)
        try:
            await callback.message.edit_text(
                "üëá –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                reply_markup=main_menu_markup(user_id)
            )
            save_user_state(user_id, "main_menu", None, callback.message.message_id)
        except Exception as e:
            logger.error(f"Error editing message: {e}")
            msg = await callback.message.answer(
                "üëá –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                reply_markup=main_menu_markup(user_id)
            )
            save_user_state(user_id, "main_menu", None, msg.message_id)
            await callback.message.delete()

    elif callback.data == "scores":
        try:
            user_id_str = str(user_id)
            results, total = get_user_scores(user_id_str)

            if not results:
                text = (
                    "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫ üòå\n"
                    "–ü–æ–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∑–∞—è–≤–∫—É ‚Äî –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–∞–ª–ª—ã –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ!"
                )
            else:
                formatted_results = "\n\n".join(
                    [f"{i + 1}. {entry}" for i, entry in enumerate(results)]
                )
                text = (
                    "üìã *–í–∞—à–∏ –∑–∞—è–≤–∫–∏:*\n\n"
                    f"{formatted_results}\n\n"
                    f"üåü *–í–∞—à–∏ –±–∞–ª–ª—ã:* *{total}*\n\n"
                    "–ù–∞–±–µ—Ä–∏—Ç–µ *80 –±–∞–ª–ª–æ–≤*, —á—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –ø—Ä–∏–∑–æ–≤! üéÅ"
                )

            try:
                await callback.message.edit_text(
                    text,
                    reply_markup=main_menu_markup(user_id),
                    parse_mode="Markdown"
                )
                save_user_state(user_id, "main_menu", None, callback.message.message_id)
            except Exception as e:
                logger.error(f"Error editing message: {e}")
                msg = await callback.message.answer(
                    text,
                    reply_markup=main_menu_markup(user_id),
                    parse_mode="Markdown"
                )
                save_user_state(user_id, "main_menu", None, msg.message_id)
                await callback.message.delete()
        except Exception as e:
            logger.error(f"Error getting user scores: {e}")
            await callback.message.answer(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ /menu"
            )

    elif callback.data == "admin_panel":
        if is_admin(user_id):
            try:
                await callback.message.edit_text("üõ° –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=admin_menu_markup())
                save_user_state(user_id, "admin_panel", None, callback.message.message_id)
            except Exception as e:
                logger.error(f"Error editing message: {e}")
                msg = await callback.message.answer("üõ° –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=admin_menu_markup())
                save_user_state(user_id, "admin_panel", None, msg.message_id)
                await callback.message.delete()
        else:
            await callback.message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
async def handle_media_in_main(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é"""
    user_id = message.from_user.id
    
    media_type = "—Ñ–æ—Ç–æ" if message.photo else "–≤–∏–¥–µ–æ" if message.video else "–∞—É–¥–∏–æ" if message.audio else "—Ñ–∞–π–ª"
    
    await message.answer(
        f"–Ø –ø–æ–ª—É—á–∏–ª –≤–∞—à {media_type}, –Ω–æ –Ω–µ –º–æ–≥—É –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é.\n\n"
        f"–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø—É–±–ª–∏–∫—É–π—Ç–µ —ç—Ç–æ—Ç {media_type} –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö "
        f"—Å —Ö–µ—à—Ç–µ–≥–æ–º #–û—Ç–ü–∞–º—è—Ç–Ω–∏–∫–∞–ö–ü–∞–º—è—Ç–∏, –∑–∞—Ç–µ–º –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É '–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É'.",
        reply_markup=main_menu_markup(user_id=user_id)
    )

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
def register_handlers(dp: Dispatcher):
    dp.register_message_handler(start, commands=["start"], state="*")
    dp.register_callback_query_handler(handle_main_menu, text=[
        "info", "apply", "scores", "admin_panel", "continue_app", "back_to_menu"
    ], state="*")
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
    dp.register_message_handler(
        handle_media_in_main,
        content_types=[
            types.ContentType.PHOTO, 
            types.ContentType.VIDEO, 
            types.ContentType.AUDIO, 
            types.ContentType.DOCUMENT,
            types.ContentType.VOICE,
            types.ContentType.STICKER
        ],
        state=None
    )
